/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   connectivity-state.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

export {ConnectivityState};

declare namespace LogicElements {

  /**
   * An element that detects online/offline states and informs about it other compopnents.
   *
   * Checking conectivity in browser is a bit tricky task. Browsers
   * vendors can't agree on what the online/offline status means and therefore
   * even if the browser says that it has a connection in reality it may
   * not be connected to the internet. However it may have LAN access.
   *
   * Note: You can be sure that if the status is `offline` then the browser
   * is offline. But when the status is onLine it may mean that there is a
   * network connection but there's no internet connection
   * (and therefore you are offline for the outside world).
   *
   * In the element, if the `online` attribute is set to `false` the app
   * is offline but when it's set to true it probably is online but may not
   * have access to the internet.
   *
   * ## Example
   *
   * ### Polymer template
   *
   * ```html
   * <connectivity-state online="{{isOnline}}"></connectivity-state>
   * ```
   */
  class ConnectivityState extends HTMLElement {
    readonly online: Boolean|null;
    onchange: Function|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;
    _setOnline(state: any): void;

    /**
     * Handler for `online` event
     */
    _onlineHandler(): void;

    /**
     * Handler for `online` event.
     */
    _offlineHandler(): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "connectivity-state": LogicElements.ConnectivityState;
  }
}
