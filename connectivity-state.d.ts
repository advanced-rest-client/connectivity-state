/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   connectivity-state.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../iron-meta/iron-meta.d.ts" />

declare namespace ApiElements {

  /**
   * `connectivity-state`
   *
   * An element that detects online/offline states and informs about it other compopnents
   *
   * An element that detects online/offline states and informs about it other
   * compopnents. Checking conectivity in browser is a tricky task. Browsers
   * vendors can't agree on what the online/offline status means and therefore
   * even if the browser says that it has intentet connection in reality it may
   * not (because it may have LAN aceess).
   *
   * This element is doing whatever it's available in current browser to
   * inform the app about current conectivity state.
   *
   * Note: You can be sure that if the status is `offline` the browser
   * is offline. But when the status is onLine it may mean that there is a
   * network connection but there's no internet connection
   * (and therefore you are offline for the outside world).
   *
   * In the element, if the `online` attribute is set to `false` the the app
   * is offline but when it's set to true it probably is online but may not
   * have access to the internet.
   *
   * ### Example
   *
   * ```html
   * <connectivity-state online="{{isOnline}}"></connectivity-state>
   * ```
   *
   * Other elements and/or app can access this information via Polymer's data
   * binding system or:
   *
   * 1) By listening for an event `connectivity-state-changed`
   *
   * ```javascript
   * document.addEventListener('connectivity-state-changed', (e) => {
   *  // e.detail.online; (boolean, false is offline)
   * });
   * ```
   *
   * 2) Reading value from the `<iron-meta>` element
   *
   * ```html
   * <iron-meta key="connectivity-state" value="{{networkOnline}}"></iron-meta>
   * ```
   *
   * 3) In javascript using one of the following methods:
   * ```javascipt
   * // With Polymer
   * new Polymer.IronMetaQuery({key: 'connectivity-state'}).value;
   * // Otherwise
   * document.createElement('iron-meta').byKey('connectivity-state');
   * // false if offline.
   * ```
   *
   * Methods above are equal and can be used with this element.
   */
  class ConnectivityState extends Polymer.Element {

    /**
     * Current conectivity state.
     * If set to false then thete's no networ connection.
     * If true it means that the network is up an running and the app
     * is probably able to connect with the outside world but it's not
     * guaranteed.
     */
    readonly online: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;
    _onlineStateChanged(state: any): void;

    /**
     * Handler for `online` event
     */
    _onlineHandler(): void;

    /**
     * Handler for `online` event.
     */
    _offlineHandler(): void;
  }
}

interface HTMLElementTagNameMap {
  "connectivity-state": ApiElements.ConnectivityState;
}
